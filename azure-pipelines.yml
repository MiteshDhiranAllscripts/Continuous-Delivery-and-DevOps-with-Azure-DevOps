# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:

  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'fd44639a-cc79-432b-818a-49333873537f'
  imageRepository: 'releasepipelines'
  containerRegistry: 'demo12.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  Parameters.solution: 'MvcMusicStore.sln'
  Parameters.dockerComposeFile: '**/docker-compose.yml'
  BuildPlatform: 'Any CPU'
  BuildConfiguration: 'Release'
  tag: '$(Build.BuildId)'
  

  # Kubernetes Namespace
  k8sNamespace: 'default'
  imagePullSecret: 'demo12b02d-auth'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build stage
  jobs:  
  - job: Build
    displayName: Build job
    pool:
      name: Hosted Windows 2019 with VS2019
      demands:
      - msbuild
      - visualstudio
    steps:
      - task: NuGetToolInstaller@0
        displayName: 'Use NuGet 4.4.1'
        inputs:
          versionSpec: 4.4.1

      - task: NuGetCommand@2
        displayName: 'NuGet restore'
        inputs:
          restoreSolution: '$(Parameters.solution)'

      - task: VSBuild@1
        displayName: 'Build solution **\*.sln'
        inputs:
          solution: '$(Parameters.solution)'
          platform: '$(BuildPlatform)'
          configuration: '$(BuildConfiguration)'

      - task: DockerCompose@0
        displayName: 'Build services'
        inputs:
          azureSubscription: 'pluralsight demo'
          azureContainerRegistry: '{"loginServer":"demo12.azurecr.io", "id" : "/subscriptions/e57087a4-a053-48c9-8857-995316398cdc/resourceGroups/demo/providers/Microsoft.ContainerRegistry/registries/demo12"}'
          dockerComposeFile: '$(Parameters.dockerComposeFile)'
          additionalDockerComposeFiles: 'docker-compose.ci.yml'
          dockerComposeFileArgs: 'DOCKER_BUILD_SOURCE='
          action: 'Build services'
          additionalImageTags: '$(Build.BuildId)'

      - task: DockerCompose@0
        displayName: 'Push services'
        inputs:
          azureSubscription: 'pluralsight demo'
          azureContainerRegistry: '{"loginServer":"demo12.azurecr.io", "id" : "/subscriptions/e57087a4-a053-48c9-8857-995316398cdc/resourceGroups/demo/providers/Microsoft.ContainerRegistry/registries/demo12"}'
          dockerComposeFile: '$(Parameters.dockerComposeFile)'
          additionalDockerComposeFiles: 'docker-compose.ci.yml'
          dockerComposeFileArgs: 'DOCKER_BUILD_SOURCE='
          action: 'Push services'
          additionalImageTags: '$(Build.BuildId)'
     
      - task: CopyFiles@2
        inputs:
          SourceFolder: '$(Build.SourcesDirectory)'
          Contents: |
            **/docker-compose.env.yml
            **/docker-compose.env.*.yml
            **/musiscstore-deploy.yml
          TargetFolder: '$(Build.ArtifactStagingDirectory)'
      
      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)'
          ArtifactName: 'drop'
          publishLocation: 'Container'
     
- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  jobs:
  - deployment: Deploy
    displayName: Deploy job
    pool:
      name: Hosted Windows 2019 with VS2019
      demands:
      - msbuild
      - visualstudio
    environment: 'ReleasePipelines.default'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadBuildArtifacts@0
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: 'drop'
              downloadPath: '$(System.ArtifactsDirectory)'

          - task: replacetokens@3
            inputs:
              rootDirectory: '$(System.ArtifactsDirectory)'
              targetFiles: '**/*.yml'
              encoding: 'auto'
              writeBOM: true
              actionOnMissing: 'warn'
              keepToken: false
              tokenPrefix: '__'
              tokenSuffix: '__'

          - task: Kubernetes@1
            inputs:
              connectionType: 'Kubernetes Service Connection'
              kubernetesServiceEndpoint: 'psdemo'
              command: 'apply'
              arguments: '-f $(System.ArtifactsDirectory)/musiscstore-deploy.yml'
              secretType: 'dockerRegistry'
              containerRegistryType: 'Azure Container Registry'
              azureSubscriptionEndpointForSecrets: 'pluralsight demo'
              azureContainerRegistry: 'psreleasedemo.azurecr.io'
              secretName: 'regsecret'

